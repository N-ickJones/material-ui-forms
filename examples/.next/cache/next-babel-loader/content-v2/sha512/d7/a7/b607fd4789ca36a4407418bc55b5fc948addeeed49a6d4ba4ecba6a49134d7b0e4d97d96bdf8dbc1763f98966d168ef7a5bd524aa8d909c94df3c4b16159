{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\armyj\\\\Documents\\\\GitHub\\\\node_library\\\\material-ui-forms\\\\examples\\\\src\\\\tests\\\\printTest.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Divider, Grid, Paper, TextField, Typography } from '@material-ui/core';\nimport { getRandomInt, PrintButton } from 'material-ui-forms';\nimport React from 'react';\nimport { useMuiPrinting } from './components/useMuiPrinting';\nexport default function PrintDocument() {\n  _s();\n\n  const [paperStyle, printComponentRef, printMode, displayPrint, handlePrintRef] = useMuiPrinting();\n  let refIndex = 0;\n\n  const printRef = () => {\n    const func = handlePrintRef(refIndex);\n    refIndex += 1;\n    return func;\n  };\n\n  function SubHeader(props) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      ref: printRef(),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 38\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(PrintButton, {\n      displayPrint: displayPrint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      ref: printComponentRef,\n      style: paperStyle,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        m: printMode ? 0 : 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            ref: printRef(),\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              align: \"center\",\n              children: \"BRIDGE Hospice Employment Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Date: \", \"2019/04/12\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), Array(100).fill(\"\").map((item, index) => {\n            if (index % 10 === 0) {\n              return /*#__PURE__*/_jsxDEV(SubHeader, {\n                title: `${index}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: getRandomInt(1, 12),\n                ref: printRef(),\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  fullWidth: true,\n                  label: `label${index}`,\n                  value: `value${index}`,\n                  style: {\n                    height: getRandomInt(30, 90)\n                  },\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PrintDocument, \"Nvn7ZYGJE70ScKbqZQv8bMx93J0=\", false, function () {\n  return [useMuiPrinting];\n});\n\n_c = PrintDocument;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintDocument\");","map":{"version":3,"sources":["C:/Users/armyj/Documents/GitHub/node_library/material-ui-forms/examples/src/tests/printTest.tsx"],"names":["Box","Divider","Grid","Paper","TextField","Typography","getRandomInt","PrintButton","React","useMuiPrinting","PrintDocument","paperStyle","printComponentRef","printMode","displayPrint","handlePrintRef","refIndex","printRef","func","SubHeader","props","title","Array","fill","map","item","index","height"],"mappings":"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","sourcesContent":["import { Box, Divider, Grid, Paper, TextField, Typography} from '@material-ui/core';\r\nimport { getRandomInt, PrintButton } from 'material-ui-forms';\r\nimport React from 'react';\r\nimport { useMuiPrinting } from './components/useMuiPrinting';\r\n\r\n\r\nexport default function PrintDocument() {\r\n    const [ paperStyle, printComponentRef, printMode, displayPrint, handlePrintRef ] = useMuiPrinting();\r\n\r\n    let refIndex = 0;\r\n\r\n    const printRef = () => {\r\n        const func = handlePrintRef(refIndex);\r\n        refIndex += 1;\r\n        return func;\r\n    }\r\n\r\n    function SubHeader(props: {title: string}) {\r\n        return (\r\n          <Grid item xs={12} ref={printRef()}>\r\n            <Box mt={3}><Typography variant=\"h6\">{props.title}</Typography></Box>\r\n            <Box width=\"100%\" mb={2}><Divider /> </Box>\r\n          </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <PrintButton displayPrint={displayPrint} />\r\n            <Paper ref={printComponentRef} style={paperStyle}>\r\n                <Box m={printMode ? 0 : 2}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} ref={printRef()}>\r\n                        <Typography variant=\"h4\" align=\"center\">BRIDGE Hospice Employment Application</Typography>\r\n                        <Typography>Date: {\"2019/04/12\"}</Typography>\r\n                    </Grid>\r\n                    {Array(100).fill(\"\").map((item: any, index: number) => {\r\n                        if ((index % 10) === 0) {\r\n                            return (\r\n                                <SubHeader key={index} title={`${index}`} />\r\n                            )\r\n                        }\r\n                        else {\r\n                            return (\r\n                                <Grid item key={index} xs={getRandomInt(1, 12) as any} ref={printRef()}>\r\n                                    <TextField \r\n                                        fullWidth \r\n                                        label={`label${index}`} \r\n                                        value={`value${index}`}\r\n                                        style={{height: getRandomInt(30, 90)}}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    })}\r\n                </Grid>\r\n                </Box>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}