{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\armyj\\\\Documents\\\\GitHub\\\\node_library\\\\material-ui-forms\\\\examples\\\\src\\\\components\\\\forms\\\\ResidenceFormView.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport residencesController from '../../controllers/ResidenceController';\nimport { ResidenceForm } from './ResidenceForm';\nimport { FormView } from '../FormView';\nexport default function ResidenceFormView(props) {\n  const {\n    0: forms,\n    1: setForms\n  } = useState([]);\n  const {\n    0: uid,\n    1: setUid\n  } = useState(Number.MAX_SAFE_INTEGER);\n\n  const handleLoad = async (local, data) => {\n    if (local && data) {\n      setForms(data);\n    } else {\n      const residences = await residencesController.getAll();\n      if (!residences) return false;\n      setForms(residences);\n    }\n\n    return true;\n  };\n\n  const handleAddNewItem = async () => {\n    forms.push({\n      residenceId: Number.MAX_SAFE_INTEGER\n    });\n    setUid(uid - 1);\n    setForms([...forms]);\n  };\n\n  const handleSubmit = async () => {\n    let success = true;\n    forms.forEach(async (residence, index) => {\n      if (residence.residenceId !== undefined && isValidId(residence.residenceId)) {\n        if (!(await handleUpdate(residence.residenceId, residence))) {\n          success = false;\n        }\n      } else {\n        if (!(await handleCreate(index, residence))) {\n          success = false;\n        }\n      }\n    });\n    return success;\n  };\n\n  const handleCreate = async (index, residence) => {\n    const residenceResponse = await residencesController.create(_objectSpread(_objectSpread({}, residence), {}, {\n      residenceId: undefined\n    }));\n\n    if (residenceResponse) {\n      //Flush Forms temp key for real key\n      const tForms = forms;\n      tForms[index] = residenceResponse;\n      setForms([]);\n      setForms(tForms);\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleUpdate = async (id, residence) => {\n    const response = await residencesController.update(id, residence);\n    return response;\n  };\n\n  const handleDelete = async index => {\n    const residenceId = forms[index].residenceId;\n\n    if (residenceId !== undefined && isValidId(residenceId)) {\n      const response = await residencesController.delete(residenceId);\n\n      if (!response) {\n        return false;\n      } //return then fire\n\n\n      setTimeout(() => {\n        const filteredResults = forms.filter(item => item.residenceId !== residenceId);\n        setForms(filteredResults);\n      });\n    }\n\n    return true;\n  };\n\n  const handleSaveChanges = async () => {\n    setForms([...forms]);\n    return true;\n  };\n\n  const handleGenerateKey = item => {\n    return `Residence${item.residenceId}`;\n  };\n\n  const isValidId = id => {\n    return id !== undefined && id < Number.MAX_SAFE_INTEGER - 1000;\n  }; //*\n\n\n  return /*#__PURE__*/_jsxDEV(FormView, {\n    FormElement: ResidenceForm,\n    title: \"Residences\",\n    minNodes: 1,\n    maxNodes: 3,\n    forms: forms,\n    handleLoad: handleLoad,\n    handleSubmit: handleSubmit,\n    handleAddNewItem: handleAddNewItem,\n    handleSaveChanges: handleSaveChanges,\n    handleDelete: handleDelete,\n    handleGenerateKey: handleGenerateKey,\n    defaultLocked: props.defaultLocked,\n    submitButtonRef: props.submitButtonRef,\n    onNext: props.onNext,\n    hideLockButton: props.hideLockButton,\n    hideSaveProgressButton: props.hideSaveProgressButton,\n    hidePrintButton: props.hidePrintButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/armyj/Documents/GitHub/node_library/material-ui-forms/examples/src/components/forms/ResidenceFormView.tsx"],"names":["React","useState","residencesController","ResidenceForm","FormView","ResidenceFormView","props","forms","setForms","uid","setUid","Number","MAX_SAFE_INTEGER","handleLoad","local","data","residences","getAll","handleAddNewItem","push","residenceId","handleSubmit","success","forEach","residence","index","undefined","isValidId","handleUpdate","handleCreate","residenceResponse","create","tForms","id","response","update","handleDelete","delete","setTimeout","filteredResults","filter","item","handleSaveChanges","handleGenerateKey","defaultLocked","submitButtonRef","onNext","hideLockButton","hideSaveProgressButton","hidePrintButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { IFormViewProps } from 'material-ui-forms';\r\nimport Residence from '../../models/Residence';\r\nimport residencesController from '../../controllers/ResidenceController';\r\nimport { ResidenceForm } from './ResidenceForm';\r\nimport { FormView } from '../FormView';\r\n\r\nexport default function ResidenceFormView(props: IFormViewProps) {\r\n  const [forms, setForms] = useState([] as Residence[]);\r\n  const [uid, setUid] = useState(Number.MAX_SAFE_INTEGER);\r\n\r\n  const handleLoad = async (local: boolean, data?: any): Promise<boolean> => {\r\n    if (local && data) {\r\n      setForms(data);\r\n    }\r\n    else {\r\n      const residences = await residencesController.getAll();\r\n      if (!residences) return false;\r\n      setForms(residences);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const handleAddNewItem = async () => {\r\n    forms.push({ residenceId: Number.MAX_SAFE_INTEGER  } as Residence);\r\n    setUid(uid - 1);\r\n    setForms([...forms]);\r\n  }\r\n\r\n  const handleSubmit = async (): Promise<boolean> => {\r\n    let success = true;\r\n    forms.forEach(async (residence, index) => {\r\n      if (residence.residenceId !== undefined && isValidId(residence.residenceId)) {\r\n        if (!await handleUpdate(residence.residenceId, residence)) {\r\n          success = false;\r\n        }\r\n      }\r\n      else {\r\n        if (!await handleCreate(index, residence)) {\r\n          success = false;\r\n        }\r\n      }\r\n    });\r\n    return success;\r\n  }\r\n\r\n  const handleCreate = async (index: number, residence: Residence): Promise<boolean> => {\r\n    const residenceResponse = await residencesController.create({ ...residence, residenceId: undefined });\r\n    if (residenceResponse) {\r\n      //Flush Forms temp key for real key\r\n      const tForms = forms;\r\n      tForms[index] = residenceResponse\r\n      setForms([])\r\n      setForms(tForms);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const handleUpdate = async (id: number, residence: Residence): Promise<boolean> => {\r\n    const response = await residencesController.update(id, residence);\r\n    return response;\r\n  }\r\n\r\n  const handleDelete = async (index: number): Promise<boolean> => {\r\n    const residenceId = forms[index].residenceId;\r\n    if (residenceId !== undefined && isValidId(residenceId)) {\r\n      const response = await residencesController.delete(residenceId);\r\n      if (!response) { return false; }\r\n\r\n      //return then fire\r\n      setTimeout(() => {\r\n        const filteredResults = forms.filter((item) => item.residenceId !== residenceId);\r\n        setForms(filteredResults);\r\n      })\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const handleSaveChanges = async (): Promise<boolean> => {\r\n    setForms([...forms]);\r\n    return true;\r\n  }\r\n\r\n  const handleGenerateKey = (item: Residence) => {\r\n    return `Residence${item.residenceId}`;\r\n  }\r\n\r\n  const isValidId = (id?: number) => {\r\n    return id !== undefined && id < (Number.MAX_SAFE_INTEGER - 1000);\r\n  }\r\n  //*\r\n  return (\r\n    <FormView<Residence>\r\n      FormElement={ResidenceForm}\r\n      title={\"Residences\"}\r\n      minNodes={1}\r\n      maxNodes={3}\r\n      forms={forms}\r\n      handleLoad={handleLoad}\r\n      handleSubmit={handleSubmit}\r\n      handleAddNewItem={handleAddNewItem}\r\n      handleSaveChanges={handleSaveChanges}\r\n      handleDelete={handleDelete}\r\n      handleGenerateKey={handleGenerateKey}\r\n      defaultLocked={props.defaultLocked}\r\n      submitButtonRef={props.submitButtonRef}\r\n      onNext={props.onNext}\r\n      hideLockButton={props.hideLockButton}\r\n      hideSaveProgressButton={props.hideSaveProgressButton}\r\n      hidePrintButton={props.hidePrintButton}\r\n    />\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}