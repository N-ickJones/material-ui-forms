{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\armyj\\\\Documents\\\\GitHub\\\\material-ui-forms\\\\examples\\\\src\\\\pages\\\\views\\\\form-view-simple.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; //ChangeEvent, \n\nimport { FormViewAuto, FormHandler } from 'material-ui-forms';\nimport { Container } from '@material-ui/core';\nimport { ResidencesController } from '../../controllers/ResidenceController'; //residencesController, \n\n//import Grid from \"@material-ui/core/Grid\";\n//import { Box, Typography } from \"@material-ui/core\";\n//import { AlertDialogButton, AutoField, AutoFreeField, countryOptions, CustomTextField, getOrdinal, IFormProps, isZip, residenceOptions, usCityOptions, usStateOptions } from 'material-ui-forms';\nimport { ResidenceForm } from '../../components/forms/ResidenceForm';\nexport default function ResidenceFormView(props) {\n  _s();\n\n  const formHandlerRef = useRef(new FormHandler({\n    controller: new ResidencesController(),\n    //residencesController,\n    state: useState([])\n  }));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(FormViewAuto, {\n      FormElement: ResidenceForm,\n      title: \"Residences\",\n      minNodes: 1,\n      maxNodes: 3,\n      formHandlerRef: formHandlerRef //{...props}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n/*\r\nexport function ResidenceForm(props: IFormProps<Residence>) {\r\n  const title = \"Residence\";\r\n  const {\r\n    index,\r\n    values,\r\n    onChange,\r\n    printMode,\r\n    locked,\r\n  } = props;\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement | {}>, property: string, value: string | boolean) => {\r\n    onChange(e, props.index, property, value);\r\n  }\r\n  const handleDelete = async () => {\r\n    props.handleDelete && props.handleDelete(index);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid container item xs={12}>\r\n          <Grid>\r\n            <Typography variant=\"h5\">{title} - {props.index + 1 !== 1 && `${getOrdinal(props.index + 1)} `}Most Recent</Typography>\r\n          </Grid>\r\n          <Box ml=\"auto\">\r\n            <AlertDialogButton\r\n              style={locked ? {display: \"none\"} : {}}\r\n              id=\"deleteForm\"\r\n              label=\"Delete\"\r\n              title={`Are you sure you want to delete this ${title}?`}\r\n              description={`This will remove the ${title.toLowerCase()} from your profile.`}\r\n              color=\"secondary\"\r\n              backLabel=\"Cancel\"\r\n              forwardLabel=\"Delete\"\r\n              onSubmit={handleDelete}\r\n              disabled={props.handleDelete === undefined}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"Type\"\r\n            name=\"type\"\r\n            onChange={handleChange}\r\n            value={values.type}\r\n            locked={locked}\r\n            required={false}\r\n            options={residenceOptions}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the address line 1\"\r\n            label=\"Address Line 1\"\r\n            name=\"addressLine1\"\r\n            onChange={handleChange}\r\n            value={values.addressLine1}\r\n            validators={[\r\n            ]}\r\n            locked={locked}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the address line 2\"\r\n            label=\"Address Line 2\"\r\n            name=\"addressLine2\"\r\n            onChange={handleChange}\r\n            value={values.addressLine2}\r\n            validators={[\r\n            ]}\r\n            locked={locked}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoFreeField\r\n            placeholder=\"Enter a city\"\r\n            label=\"City\"\r\n            name=\"city\"\r\n            onChange={handleChange}\r\n            value={values.city}\r\n            locked={locked}\r\n            required={false}\r\n            options={usCityOptions}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"State\"\r\n            name=\"state\"\r\n            onChange={handleChange}\r\n            value={values.state}\r\n            locked={locked}\r\n            options={usStateOptions}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the zip code\"\r\n            label=\"Zip Code\"\r\n            name=\"zipCode\"\r\n            onChange={handleChange}\r\n            value={values.zipCode}\r\n            validators={[\r\n              isZip\r\n            ]}\r\n            locked={locked}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"Country\"\r\n            name=\"country\"\r\n            onChange={handleChange}\r\n            value={values.country}\r\n            locked={locked}\r\n            required={false}\r\n            options={countryOptions}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n*/\n\n_s(ResidenceFormView, \"d7QFXhhFLksi+0AX49OufUzGTkA=\");\n\n_c = ResidenceFormView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidenceFormView\");","map":{"version":3,"sources":["C:/Users/armyj/Documents/GitHub/material-ui-forms/examples/src/pages/views/form-view-simple.tsx"],"names":["React","useRef","useState","FormViewAuto","FormHandler","Container","ResidencesController","ResidenceForm","ResidenceFormView","props","formHandlerRef","controller","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CAAiD;;AACjD,SAASC,YAAT,EAAuBC,WAAvB,QAA0D,mBAA1D;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,oBAAT,QAAqC,uCAArC,C,CAA8E;;AAE9E;AACA;AACA;AACA,SAASC,aAAT,QAA8B,sCAA9B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkD;AAAA;;AAC/D,QAAMC,cAAc,GAAGT,MAAM,CAAC,IAAIG,WAAJ,CAAgB;AAC5CO,IAAAA,UAAU,EAAE,IAAIL,oBAAJ,EADgC;AACL;AACvCM,IAAAA,KAAK,EAAGV,QAAQ,CAAC,EAAD;AAF4B,GAAhB,CAAD,CAA7B;AAKA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,WAAW,EAAEK,aADf;AAEE,MAAA,KAAK,EAAE,YAFT;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,QAAQ,EAAE,CAJZ;AAKE,MAAA,cAAc,EAAEG,cALlB,CAME;;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GApJwBF,iB;;KAAAA,iB","sourcesContent":["import React, { useRef, useState } from 'react'; //ChangeEvent, \r\nimport { FormViewAuto, FormHandler, IFormViewProps } from 'material-ui-forms';\r\nimport { Container } from '@material-ui/core';\r\nimport { ResidencesController } from '../../controllers/ResidenceController'; //residencesController, \r\nimport Residence from '../../models/Residence';\r\n//import Grid from \"@material-ui/core/Grid\";\r\n//import { Box, Typography } from \"@material-ui/core\";\r\n//import { AlertDialogButton, AutoField, AutoFreeField, countryOptions, CustomTextField, getOrdinal, IFormProps, isZip, residenceOptions, usCityOptions, usStateOptions } from 'material-ui-forms';\r\nimport { ResidenceForm } from '../../components/forms/ResidenceForm';\r\n\r\nexport default function ResidenceFormView(props: IFormViewProps) {\r\n  const formHandlerRef = useRef(new FormHandler({\r\n    controller: new ResidencesController(),//residencesController,\r\n    state:  useState([] as Residence[])\r\n  }));\r\n\r\n  return (\r\n    <Container>\r\n      <FormViewAuto<Residence>\r\n        FormElement={ResidenceForm}\r\n        title={\"Residences\"}\r\n        minNodes={1}\r\n        maxNodes={3}\r\n        formHandlerRef={formHandlerRef}\r\n        //{...props}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\n/*\r\nexport function ResidenceForm(props: IFormProps<Residence>) {\r\n  const title = \"Residence\";\r\n  const {\r\n    index,\r\n    values,\r\n    onChange,\r\n    printMode,\r\n    locked,\r\n  } = props;\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement | {}>, property: string, value: string | boolean) => {\r\n    onChange(e, props.index, property, value);\r\n  }\r\n  const handleDelete = async () => {\r\n    props.handleDelete && props.handleDelete(index);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        <Grid container item xs={12}>\r\n          <Grid>\r\n            <Typography variant=\"h5\">{title} - {props.index + 1 !== 1 && `${getOrdinal(props.index + 1)} `}Most Recent</Typography>\r\n          </Grid>\r\n          <Box ml=\"auto\">\r\n            <AlertDialogButton\r\n              style={locked ? {display: \"none\"} : {}}\r\n              id=\"deleteForm\"\r\n              label=\"Delete\"\r\n              title={`Are you sure you want to delete this ${title}?`}\r\n              description={`This will remove the ${title.toLowerCase()} from your profile.`}\r\n              color=\"secondary\"\r\n              backLabel=\"Cancel\"\r\n              forwardLabel=\"Delete\"\r\n              onSubmit={handleDelete}\r\n              disabled={props.handleDelete === undefined}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"Type\"\r\n            name=\"type\"\r\n            onChange={handleChange}\r\n            value={values.type}\r\n            locked={locked}\r\n            required={false}\r\n            options={residenceOptions}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the address line 1\"\r\n            label=\"Address Line 1\"\r\n            name=\"addressLine1\"\r\n            onChange={handleChange}\r\n            value={values.addressLine1}\r\n            validators={[\r\n            ]}\r\n            locked={locked}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the address line 2\"\r\n            label=\"Address Line 2\"\r\n            name=\"addressLine2\"\r\n            onChange={handleChange}\r\n            value={values.addressLine2}\r\n            validators={[\r\n            ]}\r\n            locked={locked}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoFreeField\r\n            placeholder=\"Enter a city\"\r\n            label=\"City\"\r\n            name=\"city\"\r\n            onChange={handleChange}\r\n            value={values.city}\r\n            locked={locked}\r\n            required={false}\r\n            options={usCityOptions}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"State\"\r\n            name=\"state\"\r\n            onChange={handleChange}\r\n            value={values.state}\r\n            locked={locked}\r\n            options={usStateOptions}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <CustomTextField\r\n            placeholder=\"Enter the zip code\"\r\n            label=\"Zip Code\"\r\n            name=\"zipCode\"\r\n            onChange={handleChange}\r\n            value={values.zipCode}\r\n            validators={[\r\n              isZip\r\n            ]}\r\n            locked={locked}\r\n            required={false}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={props.printMode ? 12 : 12}>\r\n          <AutoField\r\n            label=\"Country\"\r\n            name=\"country\"\r\n            onChange={handleChange}\r\n            value={values.country}\r\n            locked={locked}\r\n            required={false}\r\n            options={countryOptions}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  )\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}