{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\armyj\\\\Documents\\\\GitHub\\\\material-ui-forms\\\\examples\\\\src\\\\components\\\\SimpleForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { CustomTextField, formIsValid, isEmail, onChange, SnackBarComponent } from \"material-ui-forms\";\nimport React, { useState } from \"react\";\nexport default function ContactForm() {\n  const snackbar = SnackBarComponent();\n  const {\n    0: sentMessage,\n    1: setSentMessage\n  } = useState(false);\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\"\n  });\n\n  const onClick = async () => {\n    if (sentMessage) return;\n\n    if (!(await formIsValid())) {\n      snackbar.setAlert(_objectSpread(_objectSpread({}, snackbar.error), {}, {\n        message: \"A validation error was detected in the form\"\n      }));\n      return;\n    } //Response Handling\n\n\n    if (true) {\n      setSentMessage(true);\n      snackbar.setAlert(_objectSpread(_objectSpread({}, snackbar.success), {}, {\n        message: \"The message has been sent to Nicholas Jones.\"\n      }));\n    } else {\n      snackbar.setAlert(_objectSpread(_objectSpread({}, snackbar.error), {}, {\n        message: \"The application was unable to send the message. You can send emails to nicholas.jones@virtual-codex.com.\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      width: \"100%\",\n      padding: \"1rem\"\n    },\n    children: [snackbar.component, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: \"Write a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n          label: \"Firstname\",\n          name: \"firstName\",\n          value: form.firstName,\n          onChange: onChange(setForm),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n          label: \"Lastname\",\n          name: \"lastName\",\n          value: form.lastName,\n          onChange: onChange(setForm),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n          label: \"Email\",\n          name: \"email\",\n          value: form.email,\n          onChange: onChange(setForm),\n          required: true,\n          validators: [isEmail]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n          label: \"Subject\",\n          name: \"subject\",\n          value: form.subject,\n          onChange: onChange(setForm),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomTextField, {\n          label: \"Message\",\n          name: \"message\",\n          value: form.message,\n          onChange: onChange(setForm),\n          multiline: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClick,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/armyj/Documents/GitHub/material-ui-forms/examples/src/components/SimpleForm.tsx"],"names":["Button","Grid","Paper","Typography","CustomTextField","formIsValid","isEmail","onChange","SnackBarComponent","React","useState","ContactForm","snackbar","sentMessage","setSentMessage","form","setForm","firstName","lastName","email","subject","message","onClick","setAlert","error","success","width","padding","component"],"mappings":"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","sourcesContent":["import { Button, Grid, Paper, Typography } from \"@material-ui/core\";\r\nimport { CustomTextField, formIsValid, isEmail, onChange, SnackBarComponent } from \"material-ui-forms\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function ContactForm() {\r\n  const snackbar = SnackBarComponent();\r\n  const [sentMessage, setSentMessage] = useState(false);\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\"\r\n  });\r\n  \r\n\r\n  const onClick = async () => {\r\n    if (sentMessage) return;\r\n    if (!await formIsValid()) {\r\n      snackbar.setAlert({ ...snackbar.error, message: \"A validation error was detected in the form\" })\r\n      return;\r\n    }\r\n    //Response Handling\r\n    if (true) {\r\n      setSentMessage(true);\r\n      snackbar.setAlert({ ...snackbar.success, message: \"The message has been sent to Nicholas Jones.\" })\r\n    }\r\n    else {\r\n      snackbar.setAlert({ ...snackbar.error, message: \"The application was unable to send the message. You can send emails to nicholas.jones@virtual-codex.com.\" })\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Paper style={{ width: \"100%\", padding: \"1rem\" }}>\r\n      {snackbar.component}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" align=\"center\">Write a message</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomTextField label=\"Firstname\" name=\"firstName\" value={form.firstName} onChange={onChange(setForm)} required={true} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomTextField label=\"Lastname\" name=\"lastName\" value={form.lastName} onChange={onChange(setForm)} required={true} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomTextField label=\"Email\" name=\"email\" value={form.email} onChange={onChange(setForm)} required={true} validators={[isEmail]} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomTextField label=\"Subject\" name=\"subject\" value={form.subject} onChange={onChange(setForm)} required={true} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomTextField label=\"Message\" name=\"message\" value={form.message} onChange={onChange(setForm)} multiline={true} required={true} />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\">\r\n          <Button onClick={onClick}>Send Message</Button></Grid>\r\n      </Grid>\r\n    </Paper>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}