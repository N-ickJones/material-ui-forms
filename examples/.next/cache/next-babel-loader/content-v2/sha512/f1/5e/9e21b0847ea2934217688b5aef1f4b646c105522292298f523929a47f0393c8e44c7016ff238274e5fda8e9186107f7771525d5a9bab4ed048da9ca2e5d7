{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MockApi } from \"../mockApi/mockApi\";\nimport Axios from \"axios\";\n/**\r\n * ResidenceController: Common API Methods used for Web Forms\r\n * mockApi: Simulates an Axios API call to your server\r\n */\n\nexport class RepoController {\n  constructor(props) {\n    _defineProperty(this, \"key\", void 0);\n\n    _defineProperty(this, \"controller\", void 0);\n\n    _defineProperty(this, \"mockApi\", void 0);\n\n    this.key = props.key;\n    this.controller = props.uri;\n    this.mockApi = props.api;\n  }\n\n  async getAll() {\n    try {\n      const response = await this.mockApi.get(`${this.controller}`);\n      if (response.status === 200) return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return null;\n  }\n\n  async get(id) {\n    try {\n      const response = await this.mockApi.get(`${this.controller}/${id}`);\n      if (response.status === 200) return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return null;\n  }\n\n  async create(residence) {\n    try {\n      const response = await this.mockApi.post(`${this.controller}`, residence);\n      if (response.status === 201) return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return null;\n  }\n\n  async update(id, residence) {\n    try {\n      const response = await this.mockApi.put(`${this.controller}/${id}`, residence);\n      if (response.status === 204) return true;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return false;\n  }\n\n  async delete(id) {\n    try {\n      const response = await this.mockApi.delete(`${this.controller}/${id}`);\n      if (response.status === 200) return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return null;\n  }\n\n  getKey() {\n    return this.key;\n  }\n\n  static get instance() {\n    return residencesController;\n  }\n\n} //This is an example Only of what should be passed into the api variable.\n\nconst exampleApi = Axios.create({\n  baseURL: \"https://example.com\",\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nexport class ResidencesController extends RepoController {\n  constructor() {\n    super({\n      key: \"residenceId\",\n      uri: \"/residences\",\n      api: new MockApi(\"residenceId\")\n    });\n  }\n\n  static get instance() {\n    return residencesController;\n  }\n\n}\nconst residencesController = new ResidencesController();\nexport default residencesController; //This can vary depending on API.. this is mostly just an example","map":{"version":3,"sources":["C:/Users/armyj/Documents/GitHub/material-ui-forms/examples/src/controllers/ResidenceController.ts"],"names":["MockApi","Axios","RepoController","constructor","props","key","controller","uri","mockApi","api","getAll","response","get","status","data","error","console","log","id","create","residence","post","update","put","delete","getKey","instance","residencesController","exampleApi","baseURL","headers","ResidencesController"],"mappings":"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","sourcesContent":["import { IRepoController } from \"material-ui-forms\";\r\nimport { MockApi } from \"../mockApi/mockApi\";\r\nimport Residence from \"../models/Residence\";\r\nimport Axios, { AxiosInstance } from \"axios\";\r\n\r\n/**\r\n * ResidenceController: Common API Methods used for Web Forms\r\n * mockApi: Simulates an Axios API call to your server\r\n */\r\n export class RepoController<T> implements IRepoController<T> {\r\n    constructor(props: { key: string, uri: string, api: AxiosInstance | MockApi<T> }) {\r\n        this.key = props.key;\r\n        this.controller = props.uri;\r\n        this.mockApi = props.api;\r\n    }\r\n    key: string;\r\n    controller: string;\r\n    mockApi: any;\r\n\r\n    async getAll() {\r\n        try {\r\n            const response = await this.mockApi.get(`${this.controller}`);\r\n            if (response.status === 200) \r\n                return response.data as T[];\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async get(id: number) {\r\n        try {\r\n            const response = await this.mockApi.get(`${this.controller}/${id}`);\r\n            if (response.status === 200) \r\n                return response.data as T;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async create(residence: T) {\r\n        try {\r\n            const response = await this.mockApi.post(`${this.controller}`, residence)\r\n            if (response.status === 201)\r\n                return response.data as T;\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async update(id: number, residence: T) {\r\n        try {\r\n            const response = await this.mockApi.put(`${this.controller}/${id}`, residence)\r\n            if (response.status === 204)\r\n                return true;\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async delete(id: number) {\r\n        try {\r\n            const response = await this.mockApi.delete(`${this.controller}/${id}`)\r\n            if (response.status === 200)\r\n                return response.data as T;\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getKey() {\r\n        return this.key;\r\n    }\r\n    \r\n    static get instance() { return residencesController }\r\n}\r\n\r\n//This is an example Only of what should be passed into the api variable.\r\nconst exampleApi = Axios.create({\r\n    baseURL: \"https://example.com\",\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport class ResidencesController extends RepoController<Residence> {\r\n    constructor() { \r\n        super({\r\n            key: \"residenceId\",\r\n            uri: \"/residences\",\r\n            api: new MockApi<Residence>(\"residenceId\")\r\n        }); \r\n    }\r\n    \r\n    static get instance() { return residencesController }\r\n}\r\n\r\nconst residencesController = new ResidencesController();\r\n\r\nexport default residencesController;\r\n\r\n\r\n\r\n//This can vary depending on API.. this is mostly just an example\r\n"]},"metadata":{},"sourceType":"module"}